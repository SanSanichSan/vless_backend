services:
  remnawave-db:
    image: postgres:17.6
    container_name: 'remnawave-db'
    hostname: remnawave-db
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - TZ=UTC
    ports:
      - '127.0.0.1:6767:5432'
    volumes:
      - remnawave-db-data:/var/lib/postgresql/data
    networks:
      - remnawave-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 3s
      timeout: 10s
      retries: 3

  caddy:
    image: caddy:2.9
    container_name: 'caddy'
    hostname: caddy
    restart: always
    ports:
        - '0.0.0.0:443:443'
        - '0.0.0.0:80:80'
    networks:
        - remnawave-network
    volumes:
        - ./Caddyfile:/etc/caddy/Caddyfile
        - caddy-ssl-data:/data

  remnawave:
    image: remnawave/backend:2
    container_name: 'remnawave'
    hostname: remnawave
    restart: always
    ports:
      - '127.0.0.1:3000:3000'
    env_file:
      - .env
    networks:
      - remnawave-network
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:${METRICS_PORT:-3001}/health']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      remnawave-db:
        condition: service_healthy
      remnawave-redis:
        condition: service_healthy

  remnawave-redis:
    image: valkey/valkey:8.1-alpine
    container_name: remnawave-redis
    hostname: remnawave-redis
    restart: always
    networks:
      - remnawave-network
    volumes:
      - remnawave-redis-data:/data
    healthcheck:
      test: ['CMD', 'valkey-cli', 'ping']
      interval: 3s
      timeout: 10s
      retries: 3

  remnawave-subscription-page:
    image: remnawave/subscription-page:latest
    container_name: remnawave-subscription-page
    hostname: remnawave-subscription-page
    restart: always
    env_file:
      - .env
    environment:
        - REMNAWAVE_PANEL_URL=http://remnawave:3000
        - APP_PORT=3010
        - META_TITLE="GlobalShield.ru - Подписка"
        - META_DESCRIPTION="Ваш щит в цифровом мире"
    ports:
        - '0.0.0.0:3010:3010'
    networks:
        - remnawave-network

  payment-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: 'payment-api'
    hostname: payment-api
    restart: always
    working_dir: /var/www/html
    volumes:
      - ./api:/var/www/html
      - ./php.ini:/usr/local/etc/php/php.ini
    environment:
      - APACHE_DOCUMENT_ROOT=/var/www/html
      - PAYMENT_DB_HOST=payment-db
      - PAYMENT_DB_PORT=5432
      - PAYMENT_DB_NAME=payment_api
      - PAYMENT_DB_USER=payment_user
      - PAYMENT_DB_PASSWORD=payment_password_456
      - TELEGRAM_BOT_TOKEN=8424446876:AAGFCuNKrIKTEjd1yb5fkxb8MO6uuOgaey8
      - TELEGRAM_NOTIFY_CRM_CHAT_ID=-1002944439448
    networks:
      - remnawave-network
    ports:
      - '127.0.0.1:8080:80'
    depends_on:
      payment-db:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:80/health-check.php']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  payment-db:
    image: postgres:17.6
    container_name: 'payment-db'
    hostname: payment-db
    restart: always
    environment:
      - POSTGRES_DB=payment_api
      - POSTGRES_USER=payment_user
      - POSTGRES_PASSWORD=payment_password_456
      - TZ=UTC
    ports:
      - '127.0.0.1:5433:5432'
    volumes:
      - payment-db-data:/var/lib/postgresql/data
    networks:
      - remnawave-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U payment_user -d payment_api']
      interval: 3s
      timeout: 10s
      retries: 3

networks:
  remnawave-network:
    name: remnawave-network
    driver: bridge
    external: false

volumes:
  remnawave-db-data:
    driver: local
    external: false
    name: remnawave-db-data
  remnawave-redis-data:
    driver: local
    external: false
    name: remnawave-redis-data
  caddy-ssl-data:
    driver: local
    external: false
    name: caddy-ssl-data
  payment-db-data:
    driver: local
    external: false
    name: payment-db-data
